{"version":3,"sources":["modal/Modal.js","components/Comment.js","components/Comments.js","redux/types.js","redux/actions.js","components/Post.js","components/Posts.js","components/ControlForm.js","App.js","redux/postsReducer.js","redux/rootReducer.js","reportWebVitals.js","index.js"],"names":["Modal","active","setActive","children","className","onClick","e","stopPropagation","Comment","comments","name","body","connect","state","allComments","allData","allPosts","posts","props","filter","el","postId","map","comment","id","ADD_POST","CHANGE_ACCESS","LOAD_ALL_DATA","DELETE_POST","REBUILD_STATE","SET_SORT_TYPE","addPost","newPost","dispatch","JSON","parse","localStorage","getItem","type","payload","setItem","stringify","deletePost","setSortType","sortBy","forIdSort","isAdmin","useState","modalActive","setModalActive","useDispatch","editOrViewField","setEditOrViewField","newTitle","newBody","editField","onChange","target","value","userId","parseInt","title","numberOfComments","numberOfViews","viewField","onMouseOver","i","length","chosenId","post","sort","postA","postB","newUserId","Date","now","selectedId","setIdField","useRef","adminField","aria-label","aria-describedby","ref","current","firstLoad","setFirstLoad","useEffect","a","fetch","postsResponse","json","postsJson","commentsResponse","commentsJson","counter","j","initialState","email","rootReducer","combineReducers","action","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f24ee2a2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './modal.css'\r\n\r\nconst Modal = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? 'modal active':'modal'}>\r\n            <div className='modalContent row' onClick={e=>e.stopPropagation()}>\r\n                {children}\r\n                <button className='closeModalButton btn btn-secondary closeModalButton' onClick={()=>setActive(false)}>Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\n\r\nconst Comment = ({comments})=>{\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">                \r\n                <div className=\"card-title\">User with nickname: <b>{comments.name}</b> writes:</div>\r\n                <div className=\"card-title\">{comments.body}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Comment from './Comment'\r\n\r\nconst Comments = ({props, allComments, allPosts})=>{\r\n    return allComments.filter(el=> el.postId === props)\r\n    .map(comment => <Comment comments={comment} key={comment.id}/>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allComments: state.allData.comments,\r\n        allPosts: state.allData.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comments);","export const ADD_POST = 'ADD_POST'\r\nexport const CHANGE_ACCESS = 'CHANGE_ACCESS'\r\nexport const LOAD_ALL_DATA = 'LOAD_ALL_DATA'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const CHANGE_POST = 'CHANGE_POST'\r\nexport const REBUILD_STATE = 'REBUILD_STATE'\r\nexport const SET_SORT_TYPE = 'SET_SORT_TYPE'","import { CHANGE_ACCESS, LOAD_ALL_DATA, DELETE_POST, REBUILD_STATE, SET_SORT_TYPE } from \"./types\";\r\n\r\nexport function addPost(newPost){\r\n    return dispatch=>{\r\n        let posts = JSON.parse(localStorage.getItem('posts'))\r\n        posts = [newPost, ...posts]\r\n        dispatch({type: REBUILD_STATE, payload: posts,})\r\n        localStorage.setItem('posts', JSON.stringify(posts))\r\n    }\r\n}\r\n\r\nexport function changeAccess(){\r\n    return {\r\n        type: CHANGE_ACCESS,\r\n    }\r\n}\r\n\r\nexport function loadAllData(){\r\n    return async dispatch =>{\r\n        if(localStorage.getItem('posts')===null){\r\n            const postsResponse = await fetch('https://jsonplaceholder.typicode.com/posts/')\r\n            const postsJson = await postsResponse.json()\r\n            const commentsResponse = await fetch('https://jsonplaceholder.typicode.com/comments/ ')\r\n            const commentsJson = await commentsResponse.json()\r\n            for(let i=0; i< postsJson.length;i++){\r\n                let counter = 0\r\n                for(let j=0;j< commentsJson.length;j++){\r\n                    if(commentsJson[j].postId === postsJson[i].id){\r\n                        counter++\r\n                    }\r\n                }\r\n                postsJson[i].numberOfComments = counter\r\n                postsJson[i].numberOfViews = 0\r\n            }\r\n\r\n            dispatch({type: LOAD_ALL_DATA, posts: postsJson, comments: commentsJson})\r\n            localStorage.setItem('posts', JSON.stringify(postsJson))\r\n            localStorage.setItem('comments', JSON.stringify(commentsJson))\r\n        } else {\r\n            let posts = JSON.parse(localStorage.getItem('posts'))\r\n            let comments = JSON.parse(localStorage.getItem('comments'))\r\n            dispatch({type: LOAD_ALL_DATA, posts: posts, comments: comments})\r\n        }\r\n                \r\n    }\r\n}\r\n\r\nexport function deletePost(id){\r\n    return dispatch=>{\r\n        dispatch({type: DELETE_POST, payload: id,})\r\n        dispatch({type: DELETE_POST, payload: id,})\r\n    }\r\n}\r\n\r\nexport function addView(id){\r\n    return dispatch =>{\r\n        let posts = JSON.parse(localStorage.getItem('posts'))\r\n        for(let i = 0; i< posts.length;i++){\r\n            if(posts[i].id === id){\r\n                posts[i].numberOfViews++\r\n            }\r\n        }\r\n        dispatch({type: REBUILD_STATE, payload: posts})\r\n        localStorage.setItem('posts', JSON.stringify(posts))\r\n    }\r\n}\r\n\r\nexport function setSortType(sortBy, id=0){\r\n    return {\r\n        type: SET_SORT_TYPE,\r\n        payload: sortBy,\r\n        forIdSort: id,\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport Modal from './../modal/Modal';\r\nimport {connect} from 'react-redux'\r\nimport Comments from './Comments'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPost, addView, deletePost } from '../redux/actions';\r\nimport './styles.css'\r\n\r\n\r\nconst Post = ({posts, isAdmin})=>{\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const [editOrViewField, setEditOrViewField] = useState(true)\r\n    let newTitle = ''\r\n    let newBody = ''\r\n\r\n    const editField = (<div className=\"editField\">\r\n        <div><br />Enter new title:</div>\r\n        <input className=\"inputTitleField\" type='text' onChange={(e)=>newTitle=e.target.value}></input>\r\n        <div><br />Enter new post body:</div>\r\n        <textarea className=\"inputEditBodyField\" type='text' onChange={(e)=>newBody=e.target.value}></textarea>\r\n        <button className=\"btn btn-secondary confirmEditButton\" onClick={editPost}>Confirm</button>\r\n    </div>)\r\n\r\n    const viewField =(<div>\r\n        <div><b>Number of view:</b> {posts.numberOfViews}</div>\r\n        <div><b>Title:</b> {posts.title}</div>\r\n        <div><b>Body:</b> {posts.body}</div>\r\n        <div><b>Comments to the post:</b></div>\r\n        <Comments props={posts.id}/>\r\n    </div>)\r\n\r\n    function openModalWindow(){\r\n        setModalActive(true)\r\n        dispatch(addView(posts.id))\r\n        localStorage.setItem('currentId', JSON.stringify(posts.id))\r\n    }\r\n\r\n    function editButtonPressed(){\r\n        setEditOrViewField(false)\r\n        setModalActive(true)\r\n    }\r\n\r\n    function editPost(){        \r\n        dispatch(deletePost(JSON.parse(localStorage.getItem('currentId'))))\r\n        dispatch(addPost({\r\n            userId: parseInt(posts.userId),\r\n            id: JSON.parse(localStorage.getItem('currentId')),\r\n            title: newTitle,\r\n            body: newBody,\r\n            numberOfComments: 0,\r\n            numberOfViews: posts.numberOfViews,\r\n        }))\r\n        setModalActive(false)\r\n        setEditOrViewField(true)        \r\n    }\r\n\r\n    function deleteCurrentPost(){\r\n        dispatch(deletePost(JSON.parse(localStorage.getItem('currentId'))))\r\n    }\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-body\" onMouseOver={()=>localStorage.setItem('currentId', JSON.stringify(posts.id))}>                \r\n                <h4 className=\"card-title\">{posts.title}</h4>\r\n                <div>Number of views: {posts.numberOfViews}</div>\r\n                <button className=\"btn btn-secondary\" onClick={openModalWindow}>Show more</button>\r\n            </div>\r\n            \r\n            {isAdmin ? (<div className=\"editDeletePostButtons\">\r\n                    <button className=\"btn btn-secondary editPostButton\" onClick={editButtonPressed}>Edit post</button> \r\n                    <button className=\"btn btn-secondary deletePostButton\" onClick={deleteCurrentPost}>Delete post</button>\r\n                    </div>) : (' ')}\r\n\r\n            {editOrViewField ? (<Modal active={modalActive} setActive={setModalActive}>{viewField}</Modal>                    \r\n                ) : (<Modal active={modalActive} setActive={setModalActive}>{editField}</Modal>)}\r\n                       \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allComments: state.allData.comments,\r\n        isAdmin: state.allData.isAdmin,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Post from './Post'\r\n\r\nconst Posts = ({allPosts, sortBy, chosenId})=>{\r\n    switch(sortBy){\r\n        case 'noSort':\r\n            return allPosts.map(post => <Post posts={post} key={post.id}/>)\r\n        case 'byComments':\r\n            return allPosts.sort((postA, postB) =>postB.numberOfComments - postA.numberOfComments).map(post => <Post posts={post} key={post.id}/>)\r\n        case 'byViews':\r\n            return allPosts.sort((postA, postB) =>postB.numberOfViews - postA.numberOfViews).map(post => <Post posts={post} key={post.id}/>)\r\n        case 'byDate':\r\n            return allPosts.sort((postA, postB) =>postB.id - postA.id).map(post => <Post posts={post} key={post.id}/>)\r\n        case 'byId':\r\n            return allPosts.filter(post =>post.userId === chosenId).map(post => <Post posts={post} key={post.id}/>)\r\n        default:\r\n            return allPosts.map(post => <Post posts={post} key={post.id}/>)\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allPosts: state.allData.posts,\r\n        sortBy: state.allData.sortBy,\r\n        chosenId: state.allData.chosenId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Posts);","import React, { useRef } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Modal from '../modal/Modal'\r\nimport { useDispatch } from 'react-redux';\r\nimport {addPost, changeAccess, setSortType } from './../redux/actions.js'\r\nimport {useState} from 'react'\r\nimport './styles.css'\r\n\r\nconst ControlForm = ({props, isAdmin})=>{\r\n\r\n    const dispatch = useDispatch()\r\n    const [modalActive, setModalActive] = useState(false);\r\n    let newTitle = 'asd'\r\n    let newBody = 'gfdh'\r\n    let newUserId = Date.now\r\n    let selectedId = 1\r\n    const setIdField = useRef(null)\r\n\r\n    function changeUserAccess(){\r\n        dispatch(changeAccess())\r\n    }\r\n    \r\n    function sortByComments(){\r\n        dispatch(setSortType('byComments'))\r\n    }\r\n\r\n    function sortByViews(){\r\n        dispatch(setSortType('byViews'))\r\n    }\r\n\r\n    function sortByDate(){\r\n        dispatch(setSortType('byDate'))\r\n    }\r\n\r\n    function createPost(){\r\n        setModalActive(true)\r\n    }\r\n\r\n    function sortById(){\r\n        if(!parseInt(selectedId)){\r\n            dispatch(setSortType('noSort'))\r\n        } else{\r\n            dispatch(setSortType('byId', parseInt(selectedId)))\r\n            setIdField.current.value=''\r\n        }\r\n    }\r\n\r\n    function closeAddField(){\r\n        dispatch(addPost({\r\n            userId: parseInt(newUserId),\r\n            id: Date.now(),\r\n            title: newTitle,\r\n            body: newBody,\r\n            numberOfComments: 0,\r\n            numberOfViews: 0,\r\n        }))\r\n        setModalActive(false)\r\n    }\r\n\r\n    const adminField = (\r\n    <div className='adminField col position-relative'>\r\n        <button className=\"btn btn-secondary addPostButton\" onClick={createPost}>Add post</button>\r\n        <center><input type=\"text\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" className=\"form-control col postIdInput\" ref={setIdField} onChange={(e)=>selectedId=e.target.value}></input></center> \r\n        <button className=\"btn btn-secondary col sortByIdButton\" onClick={sortById}>Display the posts of chosen user</button>\r\n    </div>\r\n\r\n    )\r\n    return(\r\n        <div className=\"controlPanel row\">\r\n            <div className=\"changeUserAccessButton changeAccessDiv\">        \r\n                <button className=\"btn btn-secondary col changeAccessButton\" onClick={changeUserAccess}>{isAdmin ? ('I am guest'):('I am admin')}</button>\r\n            </div> \r\n\r\n            {isAdmin ? (adminField):('')}\r\n            \r\n            <div className=\"sortButtonsField row\">\r\n                <div className=\"sortByComments col\">        \r\n                    <button className=\"btn btn-secondary sortButton col\" onClick={sortByComments}>Sort by the number of comments</button>\r\n                </div>\r\n\r\n                <div className=\"sortByViews col\">        \r\n                    <button className=\"btn btn-secondary sortButton\" onClick={sortByViews}>Sort by the number of views</button>\r\n                </div>\r\n\r\n                <div className=\"sortByDate col\">        \r\n                    <button className=\"btn btn-secondary sortButton\" onClick={sortByDate}>Sort by date</button>\r\n                </div>\r\n            </div>\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <div className=\"addField\">\r\n                    <div><br />Enter author id:</div>\r\n                    <input className=\"inputIdField\" type='text' onChange={(e)=>newUserId=e.target.value}></input>\r\n                    <div><br />Enter new title:</div>\r\n                    <input className=\"inputTitleField\" type='text' onChange={(e)=>newTitle=e.target.value}></input>\r\n                    <div><br />Enter new post body:</div>\r\n                    <textarea className=\"inputBodyField\" onChange={(e)=>newBody=e.target.value}></textarea>\r\n                    <br /><button className=\"btn btn-secondary col confirmButton\" onClick={closeAddField}>Confirm</button>\r\n                </div>            \r\n            </Modal>\r\n        </div>\r\n    )    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        props: state.allData.posts,\r\n        isAdmin: state.allData.isAdmin,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ControlForm);","import Posts from \"./components/Posts\";\nimport ControlForm from \"./components/ControlForm\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { loadAllData } from './redux/actions.js'\nimport './style.css'\n\n\nconst App =()=>{\n  const [firstLoad, setFirstLoad] = useState(true)\n  const dispatch = useDispatch()\n\n  useEffect(()=>{\n    if(firstLoad === true){\n      setFirstLoad(false)\n      dispatch(loadAllData())      \n    }\n  })\n\n  return (\n    <div className=\"container pt-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <ControlForm/>\n        </div>\n      </div>\n\n      <div className=\"row allPosts\">\n        <div className=\"col\">\n          <Posts />\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n      props: state.allData,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { ADD_POST, CHANGE_ACCESS, DELETE_POST, LOAD_ALL_DATA, REBUILD_STATE, SET_SORT_TYPE } from \"./types\"\r\n\r\nconst initialState = {\r\n    posts : [\r\n        {\r\n            userId: 1,\r\n            id: 1,\r\n            title: 'Error!',\r\n            body: 'Posts did not load.',\r\n        }],\r\n    isAdmin: false, \r\n    comments:[\r\n        {\r\n            postId:1,\r\n            id: 1,\r\n            name: 'asdasd',\r\n            email: 'sdfxcv',\r\n            body: 'adxcvgfdh',\r\n        }\r\n    ]        \r\n}\r\n\r\nexport const postsReducer = (state = initialState, action)=>{\r\n    switch (action.type){\r\n        case ADD_POST:\r\n            return {\r\n                ...state, posts: [action.payload, ...state.posts]\r\n            }\r\n        case CHANGE_ACCESS:\r\n            return {\r\n                ...state, isAdmin: !state.isAdmin\r\n            }\r\n        case LOAD_ALL_DATA:\r\n            return {\r\n                ...state, posts: action.posts, comments: action.comments, isAdmin: false, sortBy: 'noSort',\r\n            }\r\n        case DELETE_POST:\r\n            localStorage.removeItem('posts')\r\n            localStorage.setItem('posts', JSON.stringify(state.posts))\r\n            return {\r\n                ...state, posts: state.posts.filter(el => el.id !== action.payload)\r\n            }\r\n        case REBUILD_STATE:\r\n            return {\r\n                ...state, posts: action.payload\r\n            }\r\n        case SET_SORT_TYPE:\r\n            return {\r\n                ...state, sortBy: action.payload, chosenId: action.forIdSort,\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { postsReducer } from \"./postsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    allData: postsReducer\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ))\n\nconst app = (\n  <Provider store={store}>\n    <App/>\n  </Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}